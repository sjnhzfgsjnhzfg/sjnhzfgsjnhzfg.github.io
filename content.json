{"meta":{"title":"YF's Blog","subtitle":"","description":"","author":"Yang Fan","url":"http://sjnhzfgsjnhzfg.github.io/project","root":"/project/"},"pages":[{"title":"","date":"2025-07-07T08:30:55.364Z","updated":"2025-07-07T08:30:55.364Z","comments":true,"path":"about/index.html","permalink":"http://sjnhzfgsjnhzfg.github.io/project/about/index.html","excerpt":"","text":"下面写关于自己的内容"},{"title":"所有分类","date":"2025-07-07T08:31:42.742Z","updated":"2025-07-07T08:31:42.742Z","comments":true,"path":"categories/index.html","permalink":"http://sjnhzfgsjnhzfg.github.io/project/categories/index.html","excerpt":"","text":""},{"title":"所有标签","date":"2025-07-07T08:32:11.111Z","updated":"2025-07-07T08:32:11.111Z","comments":true,"path":"tags/index.html","permalink":"http://sjnhzfgsjnhzfg.github.io/project/tags/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2025-07-07T06:13:02.000Z","updated":"2025-07-07T06:18:49.388Z","comments":true,"path":"link/index.html","permalink":"http://sjnhzfgsjnhzfg.github.io/project/link/index.html","excerpt":"","text":""},{"title":"我的朋友们","date":"2025-07-07T08:58:46.006Z","updated":"2025-07-07T08:58:46.006Z","comments":true,"path":"friends/index.html","permalink":"http://sjnhzfgsjnhzfg.github.io/project/friends/index.html","excerpt":"这里写友链上方的内容。","text":"这里写友链上方的内容。"}],"posts":[{"title":"Deepseek-R1本地部署","slug":"deepseek本地部署","date":"2025-07-06T16:05:12.000Z","updated":"2025-07-07T15:13:54.136Z","comments":true,"path":"2025/07/07/deepseek本地部署/","permalink":"http://sjnhzfgsjnhzfg.github.io/project/2025/07/07/deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/","excerpt":"","text":"DeepSeek-R1 本地部署基本信息 项目 内容 实验名称 DeepSeek本地部署 日期 2025年3月31日 指导教师 蒋博 姓名 杨凡 一、实验环境 组件 配置说明 宿主机操作系统 Windows 虚拟机环境 VMware Workstation 虚拟化系统 CentOS 7 宿主机硬件配置 内存16GB, RTX4060显卡, i9-13900H处理器, 3TB硬盘 部署模型 DeepSeek-R1-7B低参数版本 二、实验内容在CentOS 7虚拟机环境中通过容器化技术部署DeepSeek-R1-7B模型，主要流程包括： Docker环境安装与配置 Ollama推理引擎部署 Open WebUI可视化界面搭建 模型服务测试与验证 备注：因硬件资源限制，选用7B参数版本模型进行部署测试 三、部署步骤与操作记录1. Docker环境安装# 清理旧版本组件 sudo yum remove docker \\ docker-client \\ docker-client-latest \\ docker-common \\ docker-latest \\ docker-latest-logrotate \\ docker-logrotate \\ docker-engine # 安装依赖工具 sudo yum install -y yum-utils # 添加官方仓库 sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo # 安装Docker引擎 sudo yum install docker-ce docker-ce-cli containerd.io # 启动服务并设置开机自启 sudo systemctl start docker sudo systemctl enable docker # 验证安装 sudo docker run hello-world","categories":[{"name":"Linux","slug":"Linux","permalink":"http://sjnhzfgsjnhzfg.github.io/project/categories/Linux/"}],"tags":[{"name":"大模型","slug":"大模型","permalink":"http://sjnhzfgsjnhzfg.github.io/project/tags/%E5%A4%A7%E6%A8%A1%E5%9E%8B/"}]},{"title":"简历 杨凡","slug":"简历-杨凡","date":"2025-07-06T16:05:12.000Z","updated":"2025-07-07T15:05:45.348Z","comments":true,"path":"2025/07/07/简历-杨凡/","permalink":"http://sjnhzfgsjnhzfg.github.io/project/2025/07/07/%E7%AE%80%E5%8E%86-%E6%9D%A8%E5%87%A1/","excerpt":"","text":"杨凡求职意向：7-8月随时到岗 电话: 15901942650 | 邮箱: 15901942650@163.com | 居住地: 上海 教育经历上海商学院物联网工程专业 | 本科2023.09 — 2027.06 主修课程：嵌入式系统设计、海量数据存储、物联网通信技术、Linux服务器管理、微机原理与接口技术、C语言程序设计、模拟电子基础、数字电子技术基础等专业课程 GPA: 专业前 3 项目经历高可用系统部署 在项目负责人的指导下，围绕某电子商务平台开展高可用系统部署工作，运用 CentOS 7 开源操作系统以及 Keepalived、PxC、Docker 和 Nginx 等开源软件构建高可用集群，实现负载均衡架构的搭建 协助团队对高可用系统架构进行优化，有效缓解并分流客户端访问压力，显著提升服务器运行效率，为企业网站打造稳定且良好的运行平台 负责保障系统所运行的 Apache Web 服务、MySQL 数据存储库服务以及文件服务（用于存储商品图片和视频）的稳定运行 足迹商务 APP 开发项目地址：https://modao.cc/proto/tgAtQIZsssycujDABjTlbR/sharing?view_mode=read_only 运用题为开展个性化项目开发工作，严格遵循其项目结构、布局与功效设计，完成启动页、顶部导航栏及底部导航栏的功能搭建 实现顶部导航栏与个人中心、搜索、定位城市页面的有效链接，以及底部导航栏对首页等页面的精准导航 实习经历交通银行上海市分行实习生2024.7.16 — 2024.8.15 主要了解银行基本知识、业务流程等内容，参与银行现金网格化工作 协助厅堂客户办理自助业务 校园经历创新创业部组织组干事2023 — 2025 承担部门财务报销流程处理、第二课堂活动信息发布、教室租借等工作事务 积极配合其他部门，为其工作推进提供及时有效的协助 学术部策划组干事2023 — 2024 负责撰写通知、推文、新闻稿等文案工作 策划执行二十四期博·约讲坛之校友讲坛、95期博·约讲坛等活动 院办公室部组织组干事2023 — 2024 主要负责团员统计工作，协助组织部完成各项任务 拥有丰富的汇报及数据统计经验 技能荣誉荣誉奖项 大学生创新创业训练计划项目国家级立项 中国国际大学生创新大赛市赛银奖 挑战杯校级金奖 校级二等奖学金（2次） 证书 CET六级 百度大模型学生训练营结业证 物联网二三级证书 SSP英文记者报结业证 C2驾驶证 技能 熟练运用Office办公软件 掌握C语言编程 熟悉树莓派开发 精通VMware虚拟化技术","categories":[{"name":"简历","slug":"简历","permalink":"http://sjnhzfgsjnhzfg.github.io/project/categories/%E7%AE%80%E5%8E%86/"}],"tags":[{"name":"实习","slug":"实习","permalink":"http://sjnhzfgsjnhzfg.github.io/project/tags/%E5%AE%9E%E4%B9%A0/"}]},{"title":"高可用部署","slug":"高可用部署","date":"2025-07-06T16:05:12.000Z","updated":"2025-07-07T15:31:22.804Z","comments":true,"path":"2025/07/07/高可用部署/","permalink":"http://sjnhzfgsjnhzfg.github.io/project/2025/07/07/%E9%AB%98%E5%8F%AF%E7%94%A8%E9%83%A8%E7%BD%B2/","excerpt":"","text":"🚀高可用电子商务平台部署方案：实现业务的无缝运转摘要本文聚焦于电子商务平台的高可用系统部署，精心选用 CentOS 7 作为操作系统，巧妙借助 Keepalived、PXC、Docker 和 Nginx 搭建高可用集群，构建出高效的负载均衡架构。此架构犹如一位智能的流量调度师，能够有效缓解客户端的访问压力，大幅提升服务器的运行效率。它具备强大的承载能力，足以满足日浏览量 200 万 +、成交 10 万单的业务需求，为电商平台的业务连续性提供了坚实有力的保障。 关键词：CentOS 7，高可用集群，负载均衡，电子商务平台 一、总体架构设计1.1 技术栈组成 组件 版本 功能 Keepalived 开源版 像一位警觉的卫士，实现服务器故障转移，保障服务不间断 PXC (Percona XtraDB Cluster) 5.7 构建 MySQL 高可用集群，如同为数据安全打造了一个坚固堡垒 Docker 最新版 让应用实现容器化部署，如同将应用装进一个个独立的“魔法盒子” Nginx 最新版 担当负载均衡与反向代理的重任，合理分配流量 Apache 2.4+ 作为 Web 服务容器，为应用提供稳定的运行环境 PHP - FPM 7.4 高效处理动态页面，让网页内容生动呈现 1.2 架构拓扑1234567891011121314151617181920212223242526272829graph TD style Client fill:#E5F6FF,stroke:#73A6FF,stroke-width:2px style VIP fill:#FFF6CC,stroke:#FFBC52,stroke-width:2px style LVS01 fill:#E5F6FF,stroke:#73A6FF,stroke-width:2px style LVS02 fill:#E5F6FF,stroke:#73A6FF,stroke-width:2px style WEB01 fill:#E5F6FF,stroke:#73A6FF,stroke-width:2px style WEB02 fill:#E5F6FF,stroke:#73A6FF,stroke-width:2px style PXC fill:#FFF6CC,stroke:#FFBC52,stroke-width:2px style PXC01 fill:#E5F6FF,stroke:#73A6FF,stroke-width:2px style PXC02 fill:#E5F6FF,stroke:#73A6FF,stroke-width:2px style PXC03 fill:#E5F6FF,stroke:#73A6FF,stroke-width:2px style PXC04 fill:#E5F6FF,stroke:#73A6FF,stroke-width:2px style NFS fill:#E5F6FF,stroke:#73A6FF,stroke-width:2px Client --&gt; VIP[虚拟 IP 192.168.162.125] VIP --&gt; LVS01[负载均衡器 LVS01] VIP --&gt; LVS02[负载均衡器 LVS02] LVS01 --&gt; WEB01[Web 服务器 192.168.162.20] LVS01 --&gt; WEB02[Web 服务器 192.168.162.10] LVS02 --&gt; WEB01 LVS02 --&gt; WEB02 WEB01 --&gt; PXC[PXC 集群] WEB02 --&gt; PXC PXC --&gt; PXC01[192.168.162.130] PXC --&gt; PXC02[192.168.162.132] PXC --&gt; PXC03[192.168.162.137] PXC --&gt; PXC04[192.168.162.138] WEB01 --&gt; NFS[文件服务器 192.168.162.139] WEB02 --&gt; NFS 二、设备规划与配置2.1 IP分配表 设备类型 机器名 VIP 静态IP 用途 服务组件 负载均衡器 LVS01-23104040136 192.168.162.125 192.168.162.133 主请求分发 LVS, Keepalived, Docker 负载均衡器 LVS02-23104040136 无 192.168.162.136 故障接管 LVS, Keepalived, Docker Web服务器 WEB01-23104040136 无 192.168.162.20 处理Web请求 Apache, Docker, NFS客户端 Web服务器 WEB02-23104040136 无 192.168.162.10 处理Web请求 Apache, Docker, NFS客户端 PXC节点 PXC01-23104040136 无 192.168.162.130 数据库主节点 MySQL PXC, Docker PXC节点 PXC02-23104040136 无 192.168.162.132 数据库节点 MySQL PXC, Docker PXC节点 PXC03-23104040136 无 192.168.162.137 数据库节点 MySQL PXC, Docker PXC节点 PXC04-23104040136 无 192.168.162.138 数据库节点 MySQL PXC, Docker 文件服务器 FILE01-23104040136 无 192.168.162.139 存储媒体文件 NFS Server, Docker 2.2 基础配置1234567891011121314151617181920# 修改主机名 (以LVS01为例)hostnamectl set-hostname LVS01-23104040136exec bash# 配置静态IP (以LVS01为例)vi /etc/sysconfig/network-scripts/ifcfg-ens33# 文件内容：TYPE=EthernetBOOTPROTO=staticNAME=eth0DEVICE=eth0ONBOOT=yesIPADDR=192.168.162.133NETMASK=255.255.255.0GATEWAY=192.168.162.1DNS1=8.8.8.8# 重启网络systemctl restart network 三、核心服务部署3.1 Docker环境部署1234567# 所有节点执行yum remove docker* -yyum install -y yum-utilsyum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repoyum install -y docker-ce docker-ce-cli containerd.iosystemctl start docker &amp;&amp; systemctl enable dockerdocker run hello-world # 验证安装 3.2 负载均衡器配置 (LVS + Keepalived)1234567891011121314# LVS01/LVS02执行yum install -y ipvsadm keepalived# LVS规则配置ipvsadm -A -t 192.168.162.125:80 -s rripvsadm -a -t 192.168.162.125:80 -r 192.168.162.20:80 -gipvsadm -a -t 192.168.162.125:80 -r 192.168.162.10:80 -gipvsadm-save &gt; /etc/sysconfig/ipvsadm # 保存配置# Keepalived配置vi /etc/keepalived/keepalived.conf# 主备配置参考标准VRRP协议systemctl start keepalived &amp;&amp; systemctl enable keepalived 3.3 Web服务部署123# WEB01/WEB02执行docker pull httpddocker run -d -p 80:80 --name web_server httpd 3.4 PXC数据库集群1234567891011121314151617181920# 所有PXC节点执行mkdir -p /data/pxc/&#123;conf.d,datadir&#125;chmod 777 -R /data/pxc# 节点初始化 (PXC01执行)docker run -d \\ -e MYSQL_ROOT_PASSWORD=password \\ -e CLUSTER_NAME=pxc_cluster \\ -e XTRABACKUP_PASSWORD=password \\ --name pxc01 \\ percona/percona-xtradb-cluster:5.7# 加入集群节点 (其他节点执行)docker run -d \\ -e MYSQL_ROOT_PASSWORD=password \\ -e CLUSTER_NAME=pxc_cluster \\ -e XTRABACKUP_PASSWORD=password \\ -e CLUSTER_JOIN=pxc01 \\ --name pxc02 \\ percona/percona-xtradb-cluster:5.7 3.5 文件服务器配置1234567891011121314# FILE01执行 (NFS Server)yum install -y nfs-utilsmkdir -p /data/nfs_sharechmod -R 755 /data/nfs_sharechown -R nobody:nobody /data/nfs_shareecho &quot;/data/nfs_share 192.168.162.0/24(rw,sync,no_root_squash)&quot; &gt;&gt; /etc/exportssystemctl enable --now nfs-server rpcbindexportfs -v# WEB01/WEB02执行 (NFS Client)yum install -y nfs-utilsmkdir -p /var/www/htmlmount -t nfs 192.168.162.139:/data/nfs_share /var/www/html 3.6 tpshop商城部署12345678910111213141516171819# WEB01/WEB02执行yum install -y epel-releaseyum install -y https://rpms.remirepo.net/enterprise/remi-release-7.rpmyum install -y yum-utilsyum-config-manager --enable remi-php74yum install -y php php-fpm php-mysql php-mbstring php-xml php-gd php-cli php-curl php-opcachesystemctl enable php-fpm &amp;&amp; systemctl start php-fpm# 部署tpshopchown nginx:nginx -R /opt/www/chmod 777 -R /opt/www/rm -rf /etc/nginx/conf.d/default.confcp /root/web.conf /etc/nginx/conf.d/systemctl restart nginx# 同步WEB配置到集群scp -r /opt/www root@web02_ip:/opt/ssh web02_ip &quot;systemctl restart nginx&quot; 四、系统测试方案4.1 负载均衡测试12345# 模拟主负载均衡器故障systemctl stop keepalived on LVS01# 验证VIP漂移arping -I eth0 192.168.162.125 # 应显示LVS02 MAC地址 4.2 Web服务测试123curl http://192.168.162.20 # 应返回WEB01内容curl http://192.168.162.10 # 应返回WEB02内容curl http://192.168.162.125 # 应轮询返回WEB01/WEB02内容 4.3 PXC集群测试12345678-- 在任意节点创建测试数据CREATE DATABASE ha_test;USE ha_test;CREATE TABLE cluster_test(id INT PRIMARY KEY AUTO_INCREMENT, data VARCHAR(20));-- 在其他节点验证数据同步SHOW DATABASES; # 应包含ha_testSELECT * FROM ha_test.cluster_test; # 数据应一致 4.4 文件服务测试123456# 在FILE01创建测试文件echo &quot;NFS Test&quot; &gt; /data/nfs_share/test.txt# 在WEB节点验证ls /var/www/html # 应显示test.txtcat /var/www/html/test.txt # 应显示&quot;NFS Test&quot; 五、故障处理方案5.1 MySQL集群初始化问题1234SET GLOBAL sql_mode=&#x27;NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION&#x27;;SET SESSION sql_mode=&#x27;NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION&#x27;;使用配置文件安装nginx vim ngnix.repo 5.2 容器端口冲突1234567# 检查端口占用netstat -tuln | grep &lt;端口号&gt;# 解决方案：# 1. 停止占用进程# 2. 修改服务端口映射docker run -d -p &lt;新端口&gt;:&lt;容器端口&gt; ... 参考文献 刘利，陈勇. 基于Keepalived实现高可用集群及负载均衡配置与分析[J]. 计算机工程与应用, 2022, 38(05): 200-202. 张志杰. 基于Nginx的负载均衡策略优化研究[J]. 电子技术与软件工程, 2019(02). 吴明华. 基于Linux高可用集群和负载均衡技术研究[J]. 科技创新与应用, 2018(36). Percona XtraDB Cluster 官方文档. https://www.percona.com/doc/percona-xtradb-cluster Keepalived User Guide. https://www.keepalived.org/documentation.html &gt; **部署说明**： &gt; 1. 本方案采用**双活负载均衡**+**Web集群**+**多节点PXC**架构，实现全链路高可用 &gt; 2. 文件服务采用NFS集中存储，确保Web节点间数据一致性 &gt; 3. 数据库集群需确保节点间网络延迟&lt;1ms，建议使用万兆网络互联 &gt; 4. 生产环境建议增加Redis缓存层和ELK日志监控系统","categories":[{"name":"Linux","slug":"Linux","permalink":"http://sjnhzfgsjnhzfg.github.io/project/categories/Linux/"}],"tags":[{"name":"Linux服务器管理","slug":"Linux服务器管理","permalink":"http://sjnhzfgsjnhzfg.github.io/project/tags/Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AE%A1%E7%90%86/"}]}],"categories":[{"name":"Linux","slug":"Linux","permalink":"http://sjnhzfgsjnhzfg.github.io/project/categories/Linux/"},{"name":"简历","slug":"简历","permalink":"http://sjnhzfgsjnhzfg.github.io/project/categories/%E7%AE%80%E5%8E%86/"}],"tags":[{"name":"大模型","slug":"大模型","permalink":"http://sjnhzfgsjnhzfg.github.io/project/tags/%E5%A4%A7%E6%A8%A1%E5%9E%8B/"},{"name":"实习","slug":"实习","permalink":"http://sjnhzfgsjnhzfg.github.io/project/tags/%E5%AE%9E%E4%B9%A0/"},{"name":"Linux服务器管理","slug":"Linux服务器管理","permalink":"http://sjnhzfgsjnhzfg.github.io/project/tags/Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AE%A1%E7%90%86/"}]}